/**
 * @packageDocumentation
 * @module api.functional.novel.status
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";
import type { Resolved } from "typia";

import { Body } from "..";

/**
 * @controller NovelStatusController.updateReviewStatus
 * @path POST /novel/status
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function updateReviewStatus(
  connection: IConnection,
  body: updateReviewStatus.Input,
): Promise<void> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...updateReviewStatus.METADATA,
      template: updateReviewStatus.METADATA.path,
      path: updateReviewStatus.path(),
    },
    body,
  );
}
export namespace updateReviewStatus {
  export type Input = Resolved<Body.IUpdateReviewStatusArgs>;

  export const METADATA = {
    method: "POST",
    path: "/novel/status",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/novel/status";
}
